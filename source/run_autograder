#!/usr/bin/env bash

DELAY=10 # Set time in seconds
TIMEOUT=4 # Set timeout in minutes

# Write error message to results file
write_error() {
    local message=$1
    echo $message
    echo "{ \"score\": 0, \"output\": \"${message}\" }" > /autograder/results/results.json
}

# Start time of script
start_time=$(date +%s)

# Maximum time for entire script (8 minutes in seconds)
max_total_time=$((TIMEOUT * 2 * 60 - 1))

# Maximum number of retries and attempt counter
max_attempts=3
attempt=1
use_parallel=true

# Loop to retry on failure
while [ $attempt -le $max_attempts ]; do
    
    # Check if we're approaching total time limit
    current_time=$(date +%s)
    elapsed_time=$((current_time - start_time))
    if [ $elapsed_time -ge $max_total_time ]; then
        write_error "The autograder exceeded the maximum allowed time. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
        exit 124
    fi

    echo "Running Autograder... (Attempt $attempt, useParallel = $use_parallel)"

    # Run commands with timeout
    timeout ${TIMEOUT}m bash -c "
        cd /autograder/source || exit 1
        matlab -licmode onlinelicensing -batch \"runTester($use_parallel)\" || exit 1
        cp /autograder/source/results.json /autograder/results/results.json || exit 1
    "

    exit_code=$?

    if [ $exit_code -eq 0 ]; then
        echo "Autograder ran successfully."
        sleep $DELAY
        exit 0
    elif [ $exit_code -eq 124 ]; then
        echo "Execution timed out."
        use_parallel=false
        if [ $attempt -eq $max_attempts ]; then
            write_error "The autograder started but failed to run within sufficient time. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
            exit 124
        fi
    else
        echo "Execution failed with code $exit_code"
        if [ $attempt -ne 1 ]; then
            use_parallel=false
        fi
        if [ $attempt -eq $max_attempts ]; then
            write_error "The autograder failed to run properly. Try re-running the autograder by re-submitting your work. If the issue persists, please contact the HW TAs."
            exit 1
        fi
    fi

    attempt=$((attempt+1))
    if [ $attempt -le $max_attempts ]; then
        echo "Retrying..."
    fi
done