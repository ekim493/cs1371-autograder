#!/usr/bin/env bash

DELAY=0 # Set time in seconds

# Function to run the commands with a timeout
run_commands() {
    local input_value=$1
    timeout 4m bash -c "
        cd /autograder/source || exit 1
        matlab -licmode onlinelicensing -batch \"runTester(${input_value})\" || exit 1
        cp /autograder/source/results.json /autograder/results/results.json || exit 1
    "
}

# Function to write error message to results file
write_error() {
    local message=$1
    echo "{ \"score\": 0, \"output\": \"${message}\" }" > /autograder/results/results.json
}

# Timeout wrapper for the entire script (8 minutes)
timeout 8m bash -c '
    # Maximum number of retries and attempt counter
    max_attempts=3
    attempt=1
    last_error_was_timeout=false

    # Loop to retry on failure
    while [ $attempt -le $max_attempts ]; do
        echo "Running Autograder... (Attempt $attempt)"

        # Determine input for runTester based on previous result
        if [ $attempt -eq 1 ] || [ "$last_error_was_timeout" = false ]; then
            input_value="true"
        else
            input_value="false"
        fi

        run_commands $input_value
        exit_code=$?

        if [ $exit_code -eq 0 ]; then
            echo "Autograder ran successfully."
            sleep $DELAY
            exit 0
        elif [ $exit_code -eq 124 ]; then
            echo "Execution timed out."
            last_error_was_timeout=true
            if [ $attempt -eq $max_attempts ]; then
                write_error "The autograder started but failed to run within sufficient time. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
                exit 124
            fi
        else
            echo "Execution failed with code $exit_code"
            if [ $attempt -eq $max_attempts ]; then
                write_error "The autograder failed to run properly. Try re-running the autograder by re-submitting your work. If the issue persists, please contact the HW TAs."
                exit 1
            fi
        fi

        attempt=$((attempt+1))
        if [ $attempt -le $max_attempts ]; then
            echo "Retrying..."
        fi
    done
' 

# Handle overall timeout
if [ $? -eq 124 ]; then
    write_error "The autograder started but failed to run within sufficient time. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
    exit 124
fi