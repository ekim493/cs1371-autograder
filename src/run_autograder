#!/usr/bin/env bash

TIMEOUT=4 # Set timeout of each autograder attempt in minutes
MAX_TIME=9 # Set maximum time for entire autograder attempt in minutes
MAX_ATTEMPTS=3 # Set maximum number of times to attempt autograder
DELAY=10 # Set additional delay before finishing autograder in seconds
MATLAB_ARGS="-licmode onlinelicensing" # Additional matlab launch arguments

# Write error message to results file
write_error() {
    local message=$1
    echo $message
    echo "{ \"score\": 0, \"output\": \"${message}\" }" > /autograder/results/results.json
}

# Main attempt loop
run_attempts() {
    local attempt=1
    local use_parallel=true

    # Loop to retry on failure
    while [ $attempt -le $MAX_ATTEMPTS ]; do

        echo "Running Autograder... (Attempt $attempt, useParallel = $use_parallel)"

        # Run the autograder with timeout
        timeout ${TIMEOUT}m bash -c "
            cd /autograder/source || exit 1
            matlab $MATLAB_ARGS -batch \"Autograder(UseParallel=$use_parallel)\" || exit 1
        "

        local exit_code=$?

        if [ $exit_code -eq 0 ]; then
            echo "Autograder ran successfully."
            sleep $DELAY # Additional delay
            exit 0
        elif [ $exit_code -eq 124 ]; then
            echo "Execution timed out."
            use_parallel=false
            if [ $attempt -eq $MAX_ATTEMPTS ]; then
                write_error "The autograder started but failed to run within sufficient time. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
                exit 124
            fi
        else
            echo "Execution failed with code $exit_code"
            if [ $attempt -ne 1 ]; then
                use_parallel=false
            fi
            if [ $attempt -eq $MAX_ATTEMPTS ]; then
                write_error "The autograder failed to run properly. Try re-running the autograder by re-submitting your work. If the issue persists, please contact the HW TAs."
                exit 1
            fi
        fi

        attempt=$((attempt+1))
        echo "Retrying..."
    done

    # Exit if all attempts failed
    exit 1
}

# Export the function and variables
export -f write_error run_attempts
export TIMEOUT MATLAB_ARGS MAX_ATTEMPTS DELAY

# Maximum time for entire script in seconds
max_total_time=$((MAX_TIME * 60))

# Run the main function with timeout
timeout ${max_total_time}s bash -c "run_attempts"
script_exit_code=$?

# Check if the timeout was exceeded.
if [ $script_exit_code -eq 124 ]; then
    write_error "The autograder exceeded the maximum allowed time of ${MAX_TIME} minutes. Check for infinite loops or try re-running the autograder by re-submitting your work. If you believe this is an error, please contact the HW TAs."
    exit 124
fi

# Exit script
exit $script_exit_code
